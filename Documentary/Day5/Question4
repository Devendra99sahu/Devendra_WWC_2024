Sorted Array Search (GFG)

#include <iostream>
#include <vector>

using namespace std;

bool binarySearch(const vector<int>& arr, int k) {
    int low = 0;
    int high = arr.size() - 1;

    while (low <= high) {
        int mid = low + (high - low) / 2;

        if (arr[mid] == k) {
            return true; // k found
        } else if (arr[mid] < k) {
            low = mid + 1; // k might be in the right half
        } else {
            high = mid - 1; // k might be in the left half
        }
    }

    return false; // k not found
}

int main() {
    vector<int> arr = {1, 2, 3, 4, 6};
    int k = 6;

    if (binarySearch(arr, k)) {
        cout << "True" << endl;
    } else {
        cout << "False" << endl;
    }

    return 0;
}
